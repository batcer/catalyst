@use 'sass:map';
@use 'variables' as *;
@use 'mixins' as *;

:host {
  display: inline-block;
  max-width: 100%;
  vertical-align: middle;
  @include cat-select(none);

  &[hidden] {
    display: none;
  }
}

.cat-button {
  font: inherit;
  display: flex;
  align-items: center;
  justify-content: center;
  border: none;
  border-radius: cat-border-radius('s');
  text-decoration: none;
  width: 100%;
  box-sizing: border-box;
  cursor: pointer;
  transition: color cat-token('time.transition.s') linear, border-color cat-token('time.transition.s') linear, background-color cat-token('time.transition.s') linear,
    box-shadow cat-token('time.transition.s') linear;

  &:focus-visible {
    outline: $cat-focus-outline;
    outline-offset: 1px;
  }
}

// ----- content

.cat-button-content {
  flex: 1 1 auto;
  text-align: center;

  .cat-button-ellipsed & {
    @include cat-ellipsis;
  }
}

// ----- disabled

.cat-button-disabled {
  cursor: not-allowed;
  opacity: cat-token('opacity.disabled');
}

// ----- round

.cat-button-round {
  border-radius: 10rem;
}

// ----- loading

.cat-button-loading {
  cursor: default;

  cat-spinner {
    position: absolute;
  }

  > *:not(cat-spinner) {
    visibility: hidden;
  }
}

// ----- theme

.cat-button-filled {
  background-color: rgb(var(--bg));
  color: rgb(var(--fill));
  font-weight: 600;
  @include cat-font-smooth;
}

.cat-button-outlined {
  background-color: transparent;
  box-shadow: inset 0 0 0 1px rgba(var(--base), 0.2);
  color: rgb(var(--text));

  &:hover:not(.cat-button-disabled):not(.cat-button-loading) {
    background-color: rgba(var(--base), 0.05);
  }

  &:active:not(.cat-button-disabled):not(.cat-button-loading) {
    background-color: rgba(var(--base), 0.1);
  }
}

.cat-button-text {
  background-color: transparent;
  color: rgb(var(--text));
  text-decoration: $cat-link-text-decoration;

  &:hover::not(.cat-button-disabled):not(.cat-button-loading) {
    text-decoration: $cat-link-text-decoration-hover;
  }
}

@mixin theme($theme) {
  .cat-button-#{$theme} {
    --base: #{cat-token('color.theme.#{$theme}.text')};
    --bg: #{cat-token('color.theme.#{$theme}.bg')};
    --fill: #{cat-token('color.theme.#{$theme}.fill')};
    --text: #{cat-token('color.theme.#{$theme}.text')};

    &:hover:not(.cat-button-disabled):not(.cat-button-loading) {
      --bg: #{cat-token('color.theme.#{$theme}.bgHover')};
      --fill: #{cat-token('color.theme.#{$theme}.fillHover')};
      --text: #{cat-token('color.theme.#{$theme}.textHover')};
    }

    &:active:not(.cat-button-disabled):not(.cat-button-loading) {
      --bg: #{cat-token('color.theme.#{$theme}.bgActive')};
      --fill: #{cat-token('color.theme.#{$theme}.fillActive')};
      --text: #{cat-token('color.theme.#{$theme}.textActive')};
    }
  }
}

@include theme('primary');
@include theme('secondary');
@include theme('success');
@include theme('warning');
@include theme('danger');

// ----- size

@mixin size($size, $fontSize, $padding) {
  $-line-height: cat-body-line-height($fontSize);
  $-total-height: cat-size($size);

  .cat-button-#{$size} {
    min-width: cat-size($size);
    padding: ($-total-height - $-line-height) * 0.5 $padding;
    @include cat-body($fontSize);

    .cat-button-prefix {
      margin-right: $padding * 0.5;
    }

    .cat-button-suffix {
      margin-left: $padding * 0.5;
    }

    &.cat-button-icon {
      width: $-total-height;
      padding-left: 0;
      padding-right: 0;
    }
  }
}

@include size('xs', 's', 0.5rem);
@include size('s', 'm', 0.5rem);
@include size('m', 'm', 1rem);
@include size('l', 'm', 1.5rem);
@include size('xl', 'l', 1.5rem);
