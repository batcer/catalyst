@use 'sass:map';
@use 'variables' as *;
@use 'mixins' as *;

:host {
  display: inline-block;
  max-width: 100%;
  vertical-align: middle;
  @include cat-select(none);

  &[hidden] {
    display: none;
  }
}

.cat-button {
  display: flex;
  align-items: center;
  justify-content: center;
  border: none;
  border-radius: cat-border-radius(m);
  text-decoration: none;
  width: 100%;
  box-sizing: border-box;
  cursor: pointer;
  transition: color $cat-color-transition, border-color $cat-color-transition, background-color $cat-color-transition,
    box-shadow $cat-color-transition;

  &:focus-visible {
    outline: $cat-focus-outline;
    outline-offset: 1px;
  }
}

// ----- content

.cat-button-content {
  flex: 1 1 auto;
  text-align: center;

  .cat-button-ellipsed & {
    @include cat-ellipsis;
  }
}

// ----- disabled

.cat-button-disabled {
  cursor: not-allowed;
  opacity: $cat-disabled-opacity;
}

// ----- round

.cat-button-round {
  border-radius: 10rem;
}

// ----- loading

.cat-button-loading {
  cat-spinner {
    position: absolute;
  }

  > *:not(cat-spinner) {
    visibility: hidden;
  }
}

// ----- theme

.cat-button-filled {
  background-color: var(--bg);
  color: var(--fill);
}

.cat-button-outlined {
  background-color: transparent;
  box-shadow: inset 0 0 0 1px $cat-n50;
  color: var(--text);

  &:hover:where(:not(.cat-button-disabled)) {
    background-color: $cat-n50;
    box-shadow: inset 0 0 0 1px $cat-n75;
  }

  &:active:where(:not(.cat-button-disabled)) {
    background-color: $cat-n75;
    box-shadow: inset 0 0 0 1px $cat-n100;
  }
}

.cat-button-text {
  background-color: transparent;
  color: var(--text);
  text-decoration: $cat-link-text-decoration;

  &:hover:where(:not(.cat-button-disabled)) {
    text-decoration: $cat-link-text-decoration-hover;
  }
}

@mixin theme($theme) {
  .cat-button-#{$theme} {
    --bg: #{map.get(map.get($cat-theme, $theme), bg)};
    --fill: #{map.get(map.get($cat-theme, $theme), fill)};
    --text: #{map.get(map.get($cat-theme, $theme), text)};

    &:hover:where(:not(.cat-button-disabled)) {
      --bg: #{map.get(map.get($cat-theme, $theme), bg-hover)};
      --fill: #{map.get(map.get($cat-theme, $theme), fill-hover)};
      --text: #{map.get(map.get($cat-theme, $theme), text-hover)};
    }

    &:active:where(:not(.cat-button-disabled)) {
      --bg: #{map.get(map.get($cat-theme, $theme), bg-active)};
      --fill: #{map.get(map.get($cat-theme, $theme), fill-active)};
      --text: #{map.get(map.get($cat-theme, $theme), text-active)};
    }
  }
}

@include theme(primary);
@include theme(secondary);

// ----- size

@mixin size($size, $fontSize, $padding) {
  $-line-height: cat-body-line-height($fontSize);
  $-total-height: cat-size($size);

  .cat-button-#{$size} {
    min-width: cat-size($size);
    padding: ($-total-height - $-line-height) * 0.5 $padding;
    @include cat-body($fontSize);

    .cat-button-prefix {
      margin-right: $padding * 0.5;
    }

    .cat-button-suffix {
      margin-left: $padding * 0.5;
    }

    &.cat-button-icon {
      width: $-total-height;
      padding-left: 0;
      padding-right: 0;
    }
  }
}

@include size(xs, s, 0.5rem);
@include size(s, m, 0.5rem);
@include size(m, m, 1rem);
@include size(l, m, 1.5rem);
@include size(xl, l, 1.5rem);
